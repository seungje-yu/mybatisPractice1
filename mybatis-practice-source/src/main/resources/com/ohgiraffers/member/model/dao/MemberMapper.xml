<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
     mapper는
     1. dao 인터페이스와 동일한 패키지에 위치해야한다.
     2. dao 인터페이스의 풀네임은 namespace로 지정해야한다.
     3. mapper 인터페이스와 xml의 이름이 동일해야한다.
     4. 작성한 메소드의 이름과 id가 일치하고, 리턴 타입이 일치하는 쿼리문을 모두 작성해야한다.
-->
<mapper namespace="com.ohgiraffers.member.model.dao.MemberMapper">

    <!-- 조회한 컬럼과 DTO를 매핑시키기위한설정
         config 파일에서 alias설정을 추가하면 type설정에 full class명을 쓰지 않아도 된다.
    -->
    <resultMap id="memberResultMap" type="com.ohgiraffers.member.model.dto.MemberDTO">
        <id property="code" column="MEMBER_CODE"/>
        <result property="name" column="MEMBER_NAME"/>
        <result property="birth" column="BIRTH_DATE"/>
        <result property="info" column="DETAIL_INFO"/>
        <result property="contact" column="CONTACT"/>
        <result property="status" column="ACTIVE_STATUS"/>
    </resultMap>

    <!--
        resultType : 이미 정의 되어 있는 타입을 이용하여 리턴 타입으로 이용하는 경우
        resultMap : 위에서 생성한 resultMap을 리턴 타입으로 이용하는 경우
    -->
    <select id="selectAllMember" resultMap="memberResultMap">
        SELECT
                MEMBER_CODE,
                MEMBER_NAME,
                BIRTH_DATE,
                DETAIL_INFO,
                CONTACT,
                ACTIVE_STATUS

        FROM    member_info
        WHERE   ACTIVE_STATUS = 'Y'
        ORDER BY MEMBER_CODE
    </select>

    <!--
       파라미터가 한 개인 경우 바인딩 되는 이름은 상관없으며, 파라미터 타입을
       지정하지 않아도 된다. -->

    <select id="codeSelectMember" parameterType="_int" resultMap="memberResultMap">
        SELECT
                MEMBER_CODE,
                MEMBER_NAME,
                BIRTH_DATE,
                DETAIL_INFO,
                CONTACT,
                ACTIVE_STATUS

         FROM    member_info
         WHERE   ACTIVE_STATUS = 'Y'
         AND     MEMBER_CODE = #{ code }
    </select>
    <!--
        insert, update, delete의 경우 resultType은 작성하지 않고, 기본 _int로 수행 결과를 반환한다.
        파라미터로 전달된 DTO의 필드명으로 값을 바인딩 해야 한다. 파라미터 타입도 생략이 가능하다.
    -->
    <insert id="insertMember" parameterType="com.ohgiraffers.member.model.dto.MemberDTO">
        INSERT INTO member_info (
                                    MEMBER_NAME,
                                    BIRTH_DATE,
                                    DETAIL_INFO,
                                    CONTACT,
                                    ACTIVE_STATUS
                                )
        VALUES (
                    #{name},
                    #{birth},
                    #{info},
                    #{contact},
                    #{status}
                )
    </insert>

    <update id="updateMember">
        UPDATE member_info
        SET    MEMBER_NAME = #{ name },
               BIRTH_DATE = #{ birth },
               DETAIL_INFO = #{ info },
               CONTACT = #{ contact },
               ACTIVE_STATUS = #{ status }

        WHERE  MEMBER_CODE = #{ code }
    </update>

    <delete id="deleteMember" parameterType="_int">
        DELETE
          FROM member_info
         WHERE MEMBER_CODE = #{ code }
    </delete>
</mapper>